
@page "/password"
@inherits PasswordBase

<SolverLayout
    @ref="solverControl"
    Solver="@this"
    SelectedNavIndex="4">

    <ParameterSection>

        <h2>Parameters</h2>

        <div class="parameters-block">
            <ParameterSlider Label="Password Number" @bind-Value="@problemNumSetting" Min="1" Max="@(passwords.Length)"/>

            <Button class="btn-sm" @onclick="@Update">REGENERATE</Button>
        </div>

    </ParameterSection>

    <ProblemSection>

        <p>The Password problem asks the following question:</p>
        <blockquote>
            <p>How can we crack a password when given feedback on the closeness of our guess?</p>
        </blockquote>

        <h2>Approach</h2>
        <p>We start with a population of random strings with the same length as the password
           we are trying to guess.</p>
         <p>The fitness function is simply the total distance (in terms
           of ASCII values) between the characters in our solution and the characters in the
           password.
       </p>

       <h2>Performance</h2>
       <p>This is clearly not a realistic scenario as typically you would have a limited number
          of attempts to guess a password before being locked out and you would receive no feedback
          on incorrect guesses. However, it provides a simple example of evolving a solution
          through crossover, mutation and survival of the fittest.</p>
        <p>You may need to increase the number of generations to crack
            <a @onclick="@(() => Update(7))" style="text-decoration:underline; color:#0D658C;" >password 7</a>
           which belongs to Rick Astley!</p>

    </ProblemSection>

    <OutputSection>

        <PasswordGrid Solution="@solution" RowLength="@rowLength" />

    </OutputSection>

</SolverLayout>
